@*@model List<MovieReportInnerJoinModel>*@
@model MoviesReportIndexViewModel

@{
    Layout = "~/Views/Shared/_MoviesReportLayout.cshtml";
    ViewBag.Title = "Movies Report";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "MoviesReport", FormMethod.Get, new { id = "fMoviesReport", autocomplete = "off" }))
{
    <div class="row paddingtop">
        <div class="col-2">
            @Html.DisplayNameFor(model => model.OnlyMatchedValue)
        </div>
        <div class="col-2">
            @Html.DropDownListFor(model => model.OnlyMatchedValue, Model.OnlyMatchedSelectList, new { @class = "form-control", id = "ddlOnlyMatchedValue" })
        </div>
        <div class="col-2">
            @Html.DisplayNameFor(model => model.MovieName)
        </div>
        <div class="col-2">
            @Html.TextBoxFor(model => model.MovieName, new { @class = "form-control" })
        </div>
        <div class="col-2">
            @Html.DisplayNameFor(model => model.ProductionYears)
        </div>
        <div class="col-2">
            @Html.ListBoxFor(model => model.ProductionYears, Model.ProductionYearMultiSelectList, new { @class = "form-control listbox" })
        </div>
    </div>
    <div class="row paddingtop">
        <div class="col-2">
            @Html.DisplayNameFor(model => model.BoxOfficeReturn1)
        </div>
        <div class="col-4">
            <div class="input-group">
                @Html.TextBoxFor(model => model.BoxOfficeReturn1, new { @class = "form-control" })
                <span class="input-group-text">-</span>
                @Html.TextBoxFor(model => model.BoxOfficeReturn2, new { @class = "form-control" })
            </div>
        </div>
        <div class="col-2">
            @Html.DisplayNameFor(model => model.ReviewDate1)
        </div>
        <div class="col-4">
            <div class="input-group">
                @Html.TextBoxFor(model => model.ReviewDate1, new { @class = "form-control tbDate" })
                <span class="input-group-text">-</span>
                @Html.TextBoxFor(model => model.ReviewDate2, new { @class = "form-control tbDate" })
            </div>
        </div>
    </div>
    <div class="row paddingtop">
        <div class="offset-2 col-10">
            <button type="submit" class="btn btn-primary">Search</button>
            &nbsp;&nbsp;&nbsp;

            @*<button type="reset" class="btn btn-info">Clear</button>*@
            @*@Html.ActionLink("Clear", "Index", "MoviesReport", new { @class = "btn btn-info" })*@
            <a href="@Url.Action("Index")" class="btn btn-info">Clear</a>
        </div>
    </div>
}
<div class="row paddingtop">
    <div class="col-12">

        @*@if (Model != null && Model.Count > 0)*@
        @if (Model.InnerJoinList != null && Model.InnerJoinList.Count > 0)
        {
            <p>
                @*@Model.Count records found.*@
                @Model.InnerJoinList.Count records found.
            </p>
            <table class="table table-responsive-lg">
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieName)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().MovieName)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieProductionYear)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().MovieProductionYear)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieBoxOfficeReturn)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().MovieBoxOfficeReturn)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().DirectorFullName)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().DirectorFullName)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().DirectorRetired)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().DirectorRetired)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewContent)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().ReviewContent)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewRating)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().ReviewRating)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewReviewer)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().ReviewReviewer)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewDate)*@
                        @Html.DisplayNameFor(model => model.InnerJoinList.FirstOrDefault().ReviewDate)
                    </th>
                </tr>

                @*@foreach (var item in Model)*@
                @foreach (var item in Model.InnerJoinList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.MovieName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MovieProductionYear)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MovieBoxOfficeReturn)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DirectorFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DirectorRetired)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewContent)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewRating)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewReviewer)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewDate)
                        </td>
                    </tr>
                }

            </table>
        }
        else if (Model.LeftOuterJoinList != null && Model.LeftOuterJoinList.Count > 0)
        {
            <p>
                @*@Model.Count records found.*@
                @Model.LeftOuterJoinList.Count records found.
            </p>
            <table class="table table-responsive-lg">
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieName)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().MovieName)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieProductionYear)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().MovieProductionYear)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().MovieBoxOfficeReturn)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().MovieBoxOfficeReturn)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().DirectorFullName)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().DirectorFullName)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().DirectorRetired)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().DirectorRetired)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewContent)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().ReviewContent)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewRating)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().ReviewRating)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewReviewer)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().ReviewReviewer)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.FirstOrDefault().ReviewDate)*@
                        @Html.DisplayNameFor(model => model.LeftOuterJoinList.FirstOrDefault().ReviewDate)
                    </th>
                </tr>

                @*@foreach (var item in Model)*@
                @foreach (var item in Model.LeftOuterJoinList)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.MovieName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MovieProductionYear)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MovieBoxOfficeReturn)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DirectorFullName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DirectorRetired)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewContent)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewRating)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewReviewer)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ReviewDate)
                        </td>
                    </tr>
                }

            </table>
        }
        else
        {
            <p>No records found.</p>
        }

    </div>
</div>

@section scripts {
    @Styles.Render("~/plugins/datepickercss")
    @Scripts.Render("~/plugins/datepickerjs")

    <script>
        $(document).ready(function () {
            $("#ddlOnlyMatchedValue").change(function () {
                //console.log($("#ddlOnlyMatchedValue").val());
                $("#fMoviesReport").submit();
            });
            $('.tbDate').datepicker({
                autoclose: true,
                todayHighlight: true,
                orientation: "bottom auto",
                format: "mm/dd/yyyy"
            });
        });
    </script>
}